[draggable] {
	user-select: none;
	-moz-user-select: none;
	-khtml-user-select: none;
	-webkit-user-select: none;
	/* Required to make elements draggable in old WebKit */
	-khtml-user-drag: element;
	-webkit-user-drag: element;
}

.live__scroll {
	width: 100%;
	overflow-y: hidden;
	white-space: nowrap;
	overflow-x: inherit;
	background-color: $white;
	border-radius: calculateRem(5px);
	border: calculateRem(5px) solid $white;
}

.employees {
	width: 100%;
	table-layout: fixed;
	border-collapse: collapse;
	
	tr {
		&:nth-child(even) {
		}
		
		th {
			background-color: $gray-700;
			font-weight: $font-weight-semi;
			border: calculateRem(5px) solid $white;
			
			.sort-direction {
				width: 0;
				height: 0;
				display: inline-block;
				margin: 0 0 calculateRem(2px) calculateRem(5px);
				border-left: calculateRem(5px) solid transparent;
				border-right: calculateRem(5px) solid transparent;
			
				&.asc {
					border-bottom: calculateRem(5px) solid #000000;
				}
			
				&.desc {
					border-top: calculateRem(5px) solid #000000;
				}
			}
			
			.placement-status {
				* {
					display: inline-block;
					vertical-align: middle;
				}
			
				.indicator {
					margin-top: -2px;
					width: calculateRem(10px);
					height: calculateRem(10px);
					border-radius: calculateRem(5px);
			
					&.todo {
						color: $danger;
						background-color: $danger;
					}
			
					&.doing {
						color: $info;
						background-color: $info;
					}
			
					&.done {
						color: $success;
						background-color: $success;
					}
				}
			
				.count {
					color: $dark;
					background-color: transparent;
					font-weight: $font-weight-normal;
				}
			}
			
			.flex-column {
				width: 50%;
				background-color: transparent;
				
				.flex-row {
					&:first-child {
						background-color: $gray-100;
					}
	
					&:last-child {
						background-color: $gray-200;
					}
				}
			}
			
			&.sortable {
				/* cursor: pointer; */
			}
		}
		
		.column {
			width: 195px;
		}
		
		th.column.first {
			width: 334px;
		}
		
		th.column.last {
			width: 180px;
		}
	
		td {
			background-color: $gray-400;
			border: calculateRem(5px) solid $white;
			
			.complete {
				color: $primary;
			}

			.shift {
				border: 0;
				z-index: 1;
				width: 100%;
				min-height: 57px;
				position: relative;
				color: $body-color-light;
				background-color: $secondary;
				
				&:hover,
				&:active {
					cursor: move;
				}

				&:not(:only-child, :last-child) {
					border-bottom: calculateRem(3px) solid darken($secondary, 10%);
				}
			}
			
			.shift-selected {
				cursor: move;
				background-color: $secondary !important;
			}

			.shift-invisible {
				display: none !important;
			}
			
			.add-shift {
				border: 0;
				opacity: 0;
				z-index: 0;
				color: $gray-900;
				min-height: 67px;
				position: relative;
				background-color: transparent;
				
				&:hover {
					cursor: pointer;
				}
			}
		}
		
		th.non-draggable-cell {
			color: $dark;
			background-color: $gray-700;
			background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255, 255, 255, 0.2) 35px, rgba(255, 255, 255, 0.1) 65px);
		}
		
		th.today {
			color: $dark;
			background-color: $gray-900;
		}
		
		td.non-draggable-cell {
			z-index: 1;
			cursor: no-drop;
			color: $white;
			background-color: $gray-200;
			background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255, 255, 255, 0.5) 35px, rgba(255, 255, 255, 0.5) 65px);
		}
	
		.draggable-cell {
			z-index: 1;
			
			&:hover {
				z-index: 2;
				
				.add-shift {
					opacity: 1;
				}
			}
		}
		
		.cell-highlighted {
			opacity: 0.3;
			background-color: $success !important;
		}

		.drag-handler {
			cursor: move;
		}
	}
	
	.draggable-row-ghost {
		opacity: 0;
		
		td {
			border: 5px solid $white;
			background-color: $success;
		}
	}
	
	tfoot tr th {
		background-color: $white;
	}
}
