{
   "swagger":"2.0",
   "info":{
      "description":"This site documents the Scheduler API",
      "version":"1.0.0",
      "title":"Scheduler by Gig Grafter"
   },
   "host":"localhost:8000",
   "basePath":"/",
   "tags":[
      {
         "name":"Shift",
         "description":"API for creating new shifts and editing and deleting existing shifts"
      },
      {
         "name":"Employee",
         "description":"API for managing employees in an account"
      },
      {
         "name":"Rota",
         "description":"API for managing rotas within an account"
      },
      {
         "name":"test-controller",
         "description":"Test Controller"
      },
      {
         "name":"Verification",
         "description":"API for verifying new users"
      },
      {
         "name":"placement",
         "description":"API for making placements to shifts"
      },
      {
         "name":"Rota Type",
         "description":"API for managing rota types within an account"
      },
      {
         "name":"Signup",
         "description":"API for signing up new business users and adding employees of existing accounts to new accounts"
      },
      {
         "name":"shift",
         "description":"API for making placements to shifts"
      }
   ],
   "paths":{
      "/business-sign-up":{
         "post":{
            "tags":[
               "Signup"
            ],
            "summary":"Signs up a new user",
            "operationId":"signupUsingPOST",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"signUpRequest",
                  "description":"signUpRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SignUpRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"User was successfully signed up."
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/business-sign-up/existing-employee":{
         "post":{
            "tags":[
               "Signup"
            ],
            "summary":"Adds an existing employee to a new account",
            "operationId":"signUpExistingEmployeeUsingPOST",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"signUpRequest",
                  "description":"signUpRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SignUpRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"User was successfully added to account"
               },
               "400":{
                  "description":"User supplied invalid date"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/employee":{
         "get":{
            "tags":[
               "Employee"
            ],
            "summary":"Returns list of Account Employees",
            "operationId":"getAccountEmployeesUsingGET",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-id",
                  "in":"header",
                  "description":"X-Account-id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/EmployeeDTO"
                     }
                  }
               },
               "201":{
                  "description":"Employees successfully returned",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/EmployeeDTO"
                     }
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         },
         "post":{
            "tags":[
               "Employee"
            ],
            "summary":"Adds a new employee to an account",
            "operationId":"addEmployeeUsingPOST",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-id",
                  "in":"header",
                  "description":"X-Account-id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"employeeRequest",
                  "description":"employeeRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/EmployeeRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/EmployeeDTO"
                  }
               },
               "201":{
                  "description":"Employee successfully added.",
                  "schema":{
                     "$ref":"#/definitions/EmployeeDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/employee/load":{
         "post":{
            "tags":[
               "Employee"
            ],
            "summary":"loadEmployees",
            "operationId":"loadEmployeesUsingPOST",
            "consumes":[
               "multipart/form-data"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"file",
                  "in":"formData",
                  "description":"file",
                  "required":true,
                  "type":"file"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/EmployeeLoadResult"
                  }
               }
            }
         }
      },
      "/employee/{employeeId}":{
         "put":{
            "tags":[
               "Employee"
            ],
            "summary":"Makes updates to employee",
            "operationId":"updateEmployeeUsingPUT",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-id",
                  "in":"header",
                  "description":"X-Account-id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"employeeId",
                  "in":"path",
                  "description":"employeeId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"employeeRequest",
                  "description":"employeeRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/EmployeeRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/EmployeeDTO"
                  }
               },
               "201":{
                  "description":"Employee successfully updated",
                  "schema":{
                     "$ref":"#/definitions/EmployeeDTO"
                  }
               },
               "400":{
                  "description":"User suppliede invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         },
         "delete":{
            "tags":[
               "Employee"
            ],
            "summary":"Deletes an Employee",
            "operationId":"deleteEmployeeUsingDELETE",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-id",
                  "in":"header",
                  "description":"X-Account-id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"employeeId",
                  "in":"path",
                  "description":"employeeId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               },
               "204":{
                  "description":"Employees successfully deleted",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/placement":{
         "post":{
            "tags":[
               "placement",
               "shift"
            ],
            "summary":"Makes a placement of an employee to a shift",
            "operationId":"makePlacementUsingPOST",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"placementRequest",
                  "description":"placementRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/PlacementRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PlacementDTO"
                  }
               },
               "201":{
                  "description":"Employee successfully placed",
                  "schema":{
                     "$ref":"#/definitions/PlacementDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/placement/{placementId}":{
         "put":{
            "tags":[
               "placement",
               "shift"
            ],
            "summary":"Makes updates to a placement",
            "operationId":"updatePlacementUsingPUT",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"placementId",
                  "in":"path",
                  "description":"placementId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"placementRequest",
                  "description":"placementRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/PlacementRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PlacementDTO"
                  }
               },
               "201":{
                  "description":"Placement successfully updated",
                  "schema":{
                     "$ref":"#/definitions/PlacementDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         },
         "delete":{
            "tags":[
               "placement",
               "shift"
            ],
            "summary":"Deletes a placement from a shift",
            "operationId":"deletePlacementUsingDELETE",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"placementId",
                  "in":"path",
                  "description":"placementId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               },
               "204":{
                  "description":"Placement successfully deleted",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/rota":{
         "post":{
            "tags":[
               "Rota"
            ],
            "summary":"Creates a new rota",
            "operationId":"createRotaUsingPOST",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"rotaRequest",
                  "description":"rotaRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/RotaRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/RotaDTO"
                  }
               },
               "201":{
                  "description":"Rota was successfully created.",
                  "schema":{
                     "$ref":"#/definitions/RotaDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/rota-type":{
         "post":{
            "tags":[
               "Rota",
               "Rota Type"
            ],
            "summary":"Creates a rota type",
            "operationId":"createRotaTypeUsingPOST",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"rotaTypeRequest",
                  "description":"rotaTypeRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/RotaTypeRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/RotaTypeDTO"
                  }
               },
               "201":{
                  "description":"rota type was successfully created.",
                  "schema":{
                     "$ref":"#/definitions/RotaTypeDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid date"
               },
               "500":{
                  "description":"Internal server error."
               }
            }
         }
      },
      "/rota-type/{rotaTypeId}":{
         "put":{
            "tags":[
               "Rota",
               "Rota Type"
            ],
            "summary":"Updates an existing rota type",
            "operationId":"updateRotaTypeUsingPUT",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"rotaTypeId",
                  "in":"path",
                  "description":"rotaTypeId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"rotaTypeRequest",
                  "description":"rotaTypeRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/RotaTypeRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/RotaTypeDTO"
                  }
               },
               "201":{
                  "description":"Rota type was successfully updated.",
                  "schema":{
                     "$ref":"#/definitions/RotaTypeDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         },
         "delete":{
            "tags":[
               "Rota",
               "Rota Type"
            ],
            "summary":"Deletes an existing rota type",
            "operationId":"publishRotaUsingDELETE",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"rotaTypeId",
                  "in":"path",
                  "description":"rotaTypeId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               },
               "204":{
                  "description":"Rota type was successfully deleted.",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/rota/{rotaId}":{
         "put":{
            "tags":[
               "Rota"
            ],
            "summary":"Updates an existing rota",
            "operationId":"updateRotaUsingPUT",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"rotaId",
                  "in":"path",
                  "description":"rotaId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"rotaRequest",
                  "description":"rotaRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/RotaRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/RotaDTO"
                  }
               },
               "201":{
                  "description":"Rota was successfully updated.",
                  "schema":{
                     "$ref":"#/definitions/RotaDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         },
         "delete":{
            "tags":[
               "Rota"
            ],
            "summary":"Deletes an existing rota",
            "operationId":"deleteRotaUsingDELETE",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"rotaId",
                  "in":"path",
                  "description":"rotaId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               },
               "204":{
                  "description":"Rota was successfully deleted.",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/rota/{rotaId}/publish":{
         "put":{
            "tags":[
               "Rota"
            ],
            "summary":"Publishes an existing rota",
            "operationId":"publishRotaUsingPUT",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"rotaId",
                  "in":"path",
                  "description":"rotaId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Rota was successfully published."
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/shift":{
         "get":{
            "tags":[
               "Shift"
            ],
            "summary":"Returns list of Shifts",
            "operationId":"getShiftsForRotaUsingGET",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-id",
                  "in":"header",
                  "description":"X-Account-id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"rota",
                  "in":"query",
                  "description":"rota",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ShiftDTO"
                     }
                  }
               },
               "201":{
                  "description":"Shifts successfully returned",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ShiftDTO"
                     }
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         },
         "post":{
            "tags":[
               "Shift"
            ],
            "summary":"Creates a new shift",
            "operationId":"createShiftUsingPOST",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-id",
                  "in":"header",
                  "description":"X-Account-id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"shiftRequest",
                  "description":"shiftRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ShiftRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ShiftDTO"
                  }
               },
               "201":{
                  "description":"Shift was successfully created.",
                  "schema":{
                     "$ref":"#/definitions/ShiftDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/shift/{shiftId}":{
         "put":{
            "tags":[
               "Shift"
            ],
            "summary":"Updates an existing shift",
            "operationId":"updateShiftUsingPUT",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-id",
                  "in":"header",
                  "description":"X-Account-id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"shiftId",
                  "in":"path",
                  "description":"shiftId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"shiftRequest",
                  "description":"shiftRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ShiftRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Shift was successfully updated.",
                  "schema":{
                     "$ref":"#/definitions/ShiftDTO"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         },
         "delete":{
            "tags":[
               "Shift"
            ],
            "summary":"Deletes a Shift",
            "operationId":"deleteShiftUsingDELETE",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Account-Id",
                  "in":"header",
                  "description":"X-Account-Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"shiftId",
                  "in":"path",
                  "description":"shiftId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               },
               "204":{
                  "description":"Shift successfully deleted",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"User supplied invalid data"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      },
      "/user-verification":{
         "get":{
            "tags":[
               "Verification"
            ],
            "summary":"Verify new user",
            "operationId":"signupUsingGET",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"code",
                  "in":"query",
                  "description":"Unique token identifying new user",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"User was successfully verified"
               },
               "400":{
                  "description":"Code provided was not recognised"
               },
               "500":{
                  "description":"Internal server error"
               }
            }
         }
      }
   },
   "definitions":{
      "EmployeeDTO":{
         "type":"object",
         "properties":{
            "email":{
               "type":"string"
            },
            "employeeId":{
               "type":"integer",
               "format":"int64"
            },
            "firstName":{
               "type":"string"
            },
            "surname":{
               "type":"string"
            }
         }
      },
      "EmployeeLoadResult":{
         "type":"object",
         "properties":{
            "accountId":{
               "type":"integer",
               "format":"int64"
            },
            "failedEmployees":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FailedEmployeeLoadResult"
               }
            },
            "loadedEmployees":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/EmployeeDTO"
               }
            }
         }
      },
      "EmployeeRequest":{
         "type":"object",
         "properties":{
            "email":{
               "type":"string"
            },
            "first_name":{
               "type":"string"
            },
            "surname":{
               "type":"string"
            }
         }
      },
      "FailedEmployeeLoadResult":{
         "type":"object",
         "properties":{
            "data":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "reason":{
               "type":"string"
            },
            "row":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "PlacementDTO":{
         "type":"object",
         "properties":{
            "cost":{
               "type":"number"
            },
            "employee":{
               "$ref":"#/definitions/EmployeeDTO"
            },
            "placementId":{
               "type":"integer",
               "format":"int64"
            },
            "shift":{
               "$ref":"#/definitions/ShiftDTO"
            }
         }
      },
      "PlacementRequest":{
         "type":"object",
         "properties":{
            "cost":{
               "type":"number"
            },
            "employee-id":{
               "type":"integer",
               "format":"int64"
            },
            "shift-id":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "RoleDTO":{
         "type":"object",
         "properties":{
            "roleId":{
               "type":"integer",
               "format":"int64"
            },
            "roleName":{
               "type":"string"
            }
         }
      },
      "RotaDTO":{
         "type":"object",
         "properties":{
            "budget":{
               "type":"number"
            },
            "rotaId":{
               "type":"integer",
               "format":"int64"
            },
            "startDate":{
               "type":"string",
               "format":"date-time"
            }
         }
      },
      "RotaRequest":{
         "type":"object",
         "properties":{
            "budget":{
               "type":"number"
            },
            "rota-id":{
               "type":"string"
            },
            "rota-type-id":{
               "type":"integer",
               "format":"int64"
            },
            "start-date":{
               "type":"string"
            }
         }
      },
      "RotaTypeDTO":{
         "type":"object",
         "properties":{
            "rotaTypeId":{
               "type":"integer",
               "format":"int64"
            },
            "rotaTypeName":{
               "type":"string"
            }
         }
      },
      "RotaTypeRequest":{
         "type":"object",
         "properties":{
            "rota-name":{
               "type":"string"
            }
         }
      },
      "ShiftDTO":{
         "type":"object",
         "properties":{
            "createdDate":{
               "type":"string",
               "format":"date-time"
            },
            "endTime":{
               "type":"string",
               "format":"date-time"
            },
            "isClosingShift":{
               "type":"boolean"
            },
            "noOfPositions":{
               "type":"integer",
               "format":"int64"
            },
            "placements":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PlacementDTO"
               }
            },
            "role":{
               "$ref":"#/definitions/RoleDTO"
            },
            "shiftID":{
               "type":"integer",
               "format":"int64"
            },
            "startTime":{
               "type":"string",
               "format":"date-time"
            }
         }
      },
      "ShiftRequest":{
         "type":"object",
         "properties":{
            "end-time":{
               "type":"string"
            },
            "is-closing-shift":{
               "type":"boolean"
            },
            "number-of-positions":{
               "type":"integer",
               "format":"int64"
            },
            "role-name":{
               "type":"string"
            },
            "rota-id":{
               "type":"integer",
               "format":"int64"
            },
            "start-time":{
               "type":"string"
            }
         }
      },
      "SignUpRequest":{
         "type":"object",
         "properties":{
            "business-name":{
               "type":"string"
            },
            "first-name":{
               "type":"string"
            },
            "password":{
               "type":"string"
            },
            "subscription-level":{
               "type":"integer",
               "format":"int64"
            },
            "surname":{
               "type":"string"
            },
            "user-name":{
               "type":"string"
            }
         }
      }
   }
}
